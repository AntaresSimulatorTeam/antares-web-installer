# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]
  release:
    types: [ created ]

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.11", "3.12" ]
        os: [ windows-latest, ubuntu-20.04, ubuntu-22.04 ]

    steps:
      - uses: actions/checkout@v4
      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: 🐍 Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install hatch

      - name: 🛂 Test with pytest
        run: hatch run test

      - name: 👔 Check code style with hatch
        run: hatch fmt --check

      - name: ⌨️ Check typing with mypy
        run: hatch run types:check


  release-win:
    if: github.event.release
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest ]
        python-version: [ "3.11" ]

    steps:
      - uses: actions/checkout@v4
      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: 🐍 Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install hatch

      # Windows sub steps
      - name: ⏳ Build Windows Installer
        run: hatch run pyinstaller:build_gui AntaresWebInstaller-${{ matrix.os }}

      - name: 📦 Archive Windows binaries for upload
        uses: actions/upload-artifact@v4
        with:
          name: AntaresWebInstaller-${{ matrix.os }}
          path: dist/AntaresWebInstaller-${{ matrix.os }}.exe

      # Retrieve newly built artifacts
      - name: 🏷️ Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 📤 Upload Release Asset (Windows systems)
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload --repo ${{ env.GH_REPO }} ${{ steps.get_release.outputs.tag_name }} dist\AntaresWebInstaller-${{ matrix.os }}.exe

  release-ubuntu:
    if: github.event.release
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04, ubuntu-22.04 ]
        python-version: [ "3.11" ]

    steps:
      - uses: actions/checkout@v4
      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: 🐍 Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install hatch

      # Ubuntu sub steps
      - name: ⏳ Build Ubuntu Installer
        run: hatch run pyinstaller:build_cli AntaresWebInstallerCLI-${{ matrix.os }}

      - name: 📦 Archive Ubuntu binaries for upload
        uses: actions/upload-artifact@v4
        with:
          name: AntaresWebInstallerCLI-${{ matrix.os }}
          path: dist/AntaresWebInstallerCLI-${{ matrix.os }}

      # Retrieve newly built artifacts
      - name: 🏷️ Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 📤 Upload Release Asset (UNIX systems)
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload --repo ${{ env.GH_REPO }} ${{ steps.get_release.outputs.tag_name }} dist/AntaresWebInstallerCLI-${{ matrix.os }}