# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.8", "3.12" ]
        os: [ windows-latest, ubuntu-20.04, ubuntu-22.04 ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install hatch
          hatch dep show requirements
          pip freeze

      - name: Test with pytest
        run: hatch run test

      - name: Check code style with hatch
        run: hatch fmt --check

      - name: Check typing with mypy
        run: hatch run types:check

      - name: Build Installer
        run: hatch run pyinstaller:build AntaresWebInstaller-${{ matrix.os }}

      - name: Upload Windows binaries
        if: matrix.python-version == '3.8' && matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: AntaresWebInstaller-${{ matrix.os }}
          path: dist/AntaresWebInstaller-${{ matrix.os }}.exe

      - name: Upload Ubuntu binaries
        if: matrix.python-version == '3.8' && matrix.os != 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: AntaresWebInstaller-${{ matrix.os }}
          path: dist/AntaresWebInstaller-${{ matrix.os }}
